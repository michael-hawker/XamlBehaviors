<?xml version="1.0" encoding="utf-8"?>
<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CallMethodActionValidMethodNotFoundExceptionMessage" xml:space="preserve">
    <value>メソッド {0} が、期待される署名と一致する型 {1} のオブジェクトにありません。</value>
    <comment>{0} is the name of the method that could not be found. {1} is the name of the type that was searched for the method.</comment>
  </data>
  <data name="CannotAttachBehaviorMultipleTimesExceptionMessage" xml:space="preserve">
    <value>ビヘイビアーのインスタンスは、1 度に複数のオブジェクトに追加することはできません。</value>
  </data>
  <data name="CannotFindEventNameExceptionMessage" xml:space="preserve">
    <value>名前が {0} (型 {1}) のイベントが見つかりません。</value>
    <comment>{0} is the EventName property value specified by the user. {1} is the Type we are trying to find an event on.</comment>
  </data>
  <data name="ChangePropertyActionCannotFindPropertyNameExceptionMessage" xml:space="preserve">
    <value>名前が {0} (型 {1}) のプロパティが見つかりません。</value>
    <comment>{0} is the PropertyName property value specified by the user. {1} is the Type we are trying to find a property on.</comment>
  </data>
  <data name="ChangePropertyActionCannotSetValueExceptionMessage" xml:space="preserve">
    <value>型 {0} の値をプロパティ {1} (型 {2}) に割り当てることができません。{1} プロパティは、型 {2} の値にのみ割り当てることができます。</value>
    <comment>{0} is the type name of the illegal value, or "null" if value is null. {1} is the name of the property. {2} is the type of the property.</comment>
  </data>
  <data name="ChangePropertyActionPropertyIsReadOnlyExceptionMessage" xml:space="preserve">
    <value>プロパティ {0} (型 {1} で定義) は、set メソッドを提示していないため、修正できません。</value>
    <comment>{0} is the name of the property. {1} is the name of the type that defines the property.</comment>
  </data>
  <data name="EventNotSupportedExceptionMessage" xml:space="preserve">
    <value>イベント {0} はサポートされていません。カスタム IBehavior を実装して、このイベントに応答することを検討してください。</value>
    <comment>{0} is the name of an event.</comment>
  </data>
  <data name="GoToStateActionTargetHasNoStateGroups" xml:space="preserve">
    <value>ターゲット {0} は、VisualStateGroups を一切定義していません。</value>
    <comment>{0} is an element name and could be an empty string.</comment>
  </data>
  <data name="InvalidLeftOperand" xml:space="preserve">
    <value>型 {0} の Binding プロパティは、演算子 {1} と共に使用できません。</value>
    <comment>{0} is the type of the DataTriggerBehavior.Binding property specified by the user. {1} is one of the ComparisonConditionType enum values.</comment>
  </data>
  <data name="InvalidOperands" xml:space="preserve">
    <value>型 {0} の Binding プロパティと型 {1} の Value プロパティは、演算子 {2} と共に使用できません。</value>
    <comment>{0} is the type of the DataTriggerBehavior.Binding property specified by the user. {1} is the type of the DataTriggerBehavior.Value property specified by the user. {2} is one of the ComparisonConditionType enum values.</comment>
  </data>
  <data name="InvalidRightOperand" xml:space="preserve">
    <value>型 {0} の Value プロパティは、演算子 {1} と共に使用できません。</value>
    <comment>{1} is the type of the DataTriggerBehavior.Value property specified by the user. {1} is one of the ComparisonConditionType enum values.</comment>
  </data>
  <data name="DuplicateBehaviorInCollectionExceptionMessage" xml:space="preserve">
    <value>ビヘイビアーのインスタンスを BehaviorCollection に複数回追加することはできません。</value>
  </data>
  <data name="NonActionAddedToActionCollectionExceptionMessage" xml:space="preserve">
    <value>ActionCollection では IAction 型のみサポートされます。</value>
  </data>
  <data name="NonBehaviorAddedToBehaviorCollectionExceptionMessage" xml:space="preserve">
    <value>BehaviorCollection では IBehavior 型のみサポートされます。</value>
  </data>
</root>